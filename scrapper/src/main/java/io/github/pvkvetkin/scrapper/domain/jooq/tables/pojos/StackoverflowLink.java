/*
 * This file is generated by jOOQ.
 */
package io.github.pvkvetkin.scrapper.domain.jooq.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StackoverflowLink implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long linkId;
    private Integer answerCount;
    private OffsetDateTime updatedAt;

    public StackoverflowLink() {}

    public StackoverflowLink(StackoverflowLink value) {
        this.linkId = value.linkId;
        this.answerCount = value.answerCount;
        this.updatedAt = value.updatedAt;
    }

    @ConstructorProperties({ "linkId", "answerCount", "updatedAt" })
    public StackoverflowLink(
        @Nullable Long linkId,
        @Nullable Integer answerCount,
        @Nullable OffsetDateTime updatedAt
    ) {
        this.linkId = linkId;
        this.answerCount = answerCount;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>STACKOVERFLOW_LINK.LINK_ID</code>.
     */
    @Nullable
    public Long getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>STACKOVERFLOW_LINK.LINK_ID</code>.
     */
    public void setLinkId(@Nullable Long linkId) {
        this.linkId = linkId;
    }

    /**
     * Getter for <code>STACKOVERFLOW_LINK.ANSWER_COUNT</code>.
     */
    @Nullable
    public Integer getAnswerCount() {
        return this.answerCount;
    }

    /**
     * Setter for <code>STACKOVERFLOW_LINK.ANSWER_COUNT</code>.
     */
    public void setAnswerCount(@Nullable Integer answerCount) {
        this.answerCount = answerCount;
    }

    /**
     * Getter for <code>STACKOVERFLOW_LINK.UPDATED_AT</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>STACKOVERFLOW_LINK.UPDATED_AT</code>.
     */
    public void setUpdatedAt(@Nullable OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final StackoverflowLink other = (StackoverflowLink) obj;
        if (this.linkId == null) {
            if (other.linkId != null)
                return false;
        }
        else if (!this.linkId.equals(other.linkId))
            return false;
        if (this.answerCount == null) {
            if (other.answerCount != null)
                return false;
        }
        else if (!this.answerCount.equals(other.answerCount))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.answerCount == null) ? 0 : this.answerCount.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("StackoverflowLink (");

        sb.append(linkId);
        sb.append(", ").append(answerCount);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
